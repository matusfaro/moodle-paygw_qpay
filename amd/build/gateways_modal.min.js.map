{"version":3,"sources":["../src/gateways_modal.js"],"names":["showPlaceholderModal","ModalFactory","Templates","render","body","create","modal","show","showModal","qpayconfig","getState","component","paymentArea","itemId","description","Repository","then","state","status","createRedirectUrl","url","location","href","Promise","process","placemodal","getForm","hide","max","i","setTimeout"],"mappings":"yeAsBA,OACA,OACA,O,25BAMMA,CAAAA,CAAoB,4CAAG,yGACLC,SADK,gBAETC,WAAUC,MAAV,CAAiB,oCAAjB,CAAuD,EAAvD,CAFS,0BAErBC,IAFqB,4BACQC,MADR,wBACnBC,CADmB,QAIzBA,CAAK,CAACC,IAAN,GAJyB,yBAKlBD,CALkB,2CAAH,uD,CAapBE,CAAS,4CAAG,WAAOC,CAAP,8FACMR,SADN,gBAEEC,WAAUC,MAAV,CAAiB,wBAAjB,CAA2CM,CAA3C,CAFF,0BAEVL,IAFU,4BACmBC,MADnB,wBACRC,CADQ,QAIdA,CAAK,CAACC,IAAN,GAJc,yBAKPD,CALO,2CAAH,uD,CAiBTI,CAAQ,CAAG,SAACC,CAAD,CAAYC,CAAZ,CAAyBC,CAAzB,CAAiCC,CAAjC,CAAiD,CAC9D,MAAOC,CAAAA,CAAU,CAACL,QAAX,CAAoBC,CAApB,CAA+BC,CAA/B,CAA4CC,CAA5C,CAAoDC,CAApD,EACFE,IADE,CACG,SAAAC,CAAK,CAAI,CACX,GAAIA,CAAK,CAACC,MAAV,CAAkB,CACd,MAAOH,CAAAA,CAAU,CAACI,iBAAX,CAA6BR,CAA7B,CAAwCC,CAAxC,CAAqDC,CAArD,EACFG,IADE,CACG,SAAAI,CAAG,CAAI,CACTC,QAAQ,CAACC,IAAT,CAAgBF,CAAhB,CAEA,MAAO,IAAIG,CAAAA,OAAJ,CAAY,iBAAM,KAAN,CAAZ,CACV,CALE,CAMV,CACD,MAAO,IAAIA,CAAAA,OAAJ,CAAY,iBAAM,KAAN,CAAZ,CACV,CAXE,CAYV,C,WAWsB,QAAVC,CAAAA,OAAU,CAACb,CAAD,CAAYC,CAAZ,CAAyBC,CAAzB,CAAiCC,CAAjC,CAAiD,CAGpE,MAAOd,CAAAA,CAAoB,GACtBgB,IADE,CACG,SAAAS,CAAU,CAAI,CAChB,MAAOV,CAAAA,CAAU,CAACW,OAAX,CAAmBf,CAAnB,CAA8BC,CAA9B,CAA2CC,CAA3C,CAAmDC,CAAnD,EACFE,IADE,CACG,SAAAP,CAAU,CAAI,CAChBgB,CAAU,CAACE,IAAX,GACA,MAAOnB,CAAAA,CAAS,CAACC,CAAD,CAAT,CACFO,IADE,CACG,SAACV,CAAD,CAAW,CAEb,OADIsB,CAAAA,CAAG,CAAG,GACV,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,CAApB,CAAyBC,CAAC,EAA1B,CAA8B,CAC1BC,UAAU,CAAC,UAAY,CACnBpB,CAAQ,CAACC,CAAD,CAAYC,CAAZ,CAAyBC,CAAzB,CAAiCC,CAAjC,CACX,CAFS,CAEO,GAAd,EAACe,CAAC,CAAGA,CAAJ,CAAQ,CAAT,CAFO,CAGb,CAEDC,UAAU,CAAC,UAAY,CACnBxB,CAAK,CAACqB,IAAN,EACH,CAFS,CAEW,GAAlB,EAACC,CAAG,CAAGA,CAAN,CAAY,CAAb,CAFO,CAAV,CAGA,MAAO,IAAIL,CAAAA,OAAJ,CAAY,iBAAM,KAAN,CAAZ,CACV,CAbE,CAcV,CAjBE,CAkBV,CApBE,CAqBV,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for qpay content in the gateways modal.\n *\n * @module     paygw_qpay/gateway_modal\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport ModalFactory from 'core/modal_factory';\nimport * as Repository from './repository';\n\n/**\n * Creates and shows a modal that contains a placeholder.\n * @returns {Promise<Modal>}\n */\nconst showPlaceholderModal = async () => {\n    const modal = await ModalFactory.create({\n        body: await Templates.render('paygw_qpay/qpay_button_placeholder', {})\n    });\n    modal.show();\n    return modal;\n};\n\n/**\n * Creates and shows a modal that contains a placeholder.\n * @param {object} qpayconfig\n * @returns {Promise<Modal>}\n */\nconst showModal = async (qpayconfig) => {\n    const modal = await ModalFactory.create({\n        body: await Templates.render('paygw_qpay/qpay_button', qpayconfig)\n    });\n    modal.show();\n    return modal;\n};\n\n/**\n * Make Ajax call to get state, redirect if successful.\n *\n * @param {string} component\n * @param {string} paymentArea\n * @param {integer} itemId\n * @param {string} description\n * @returns {Promise<string>}\n */\nconst getState = (component, paymentArea, itemId, description) => {\n    return Repository.getState(component, paymentArea, itemId, description)\n        .then(state => {\n            if (state.status) {\n                return Repository.createRedirectUrl(component, paymentArea, itemId)\n                    .then(url => {\n                        location.href = url;\n                        // Return a promise that is never going to be resolved.\n                        return new Promise(() => null);\n                    });\n            }\n            return new Promise(() => null);\n        });\n};\n\n/**\n * Process the payment.\n *\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea The area of the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @param {string} description Description of the payment\n * @returns {Promise<string>}\n */\nexport const process = (component, paymentArea, itemId, description) => {\n    // This is a hack to get around linting. Promises are usually required to return\n    // But we are hacking the process js to inject a redirect so need to wait for that to occur.\n    return showPlaceholderModal()\n        .then(placemodal => {\n            return Repository.getForm(component, paymentArea, itemId, description)\n                .then(qpayconfig => {\n                    placemodal.hide();\n                    return showModal(qpayconfig)\n                        .then((modal) => {\n                            let max = 100;\n                            for (var i = 0; i < max; i++) {\n                                setTimeout(function () {\n                                    getState(component, paymentArea, itemId, description);\n                                }, (i + i + 1) * 3000);\n                            }\n                            // Hide Modal when timing out.\n                            setTimeout(function () {\n                                modal.hide();\n                            }, (max + max + 1) * 3000);\n                            return new Promise(() => null);\n                        });\n                });\n        });\n};"],"file":"gateways_modal.min.js"}